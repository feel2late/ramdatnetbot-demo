from fastapi import FastAPI, Request
from bot_init import bot
import db_requests
import config
import datetime
import traceback
from modules.client import Client
from gifs_id import gifs_id
import random


app = FastAPI()


async def send_message_to_admins(message_text: str):
    for admin in config.admins:
        try:
            await bot.send_message(admin, message_text)
        except:
            print(traceback.format_exc())


@app.post("/callback")
async def payment_webhook(request: Request):
    webhook_data = await request.json()
    
    if webhook_data['event'] == 'payment.succeeded':
        client = Client(webhook_data["object"]['metadata']['user_telegram_id'])
    
        new_shutdown_date = await db_requests.add_days(user_telegram_id=client.user_telegram_id, days=31 * int(webhook_data["object"]["metadata"]["number_of_month"]))
        await db_requests.add_payment(client.user_telegram_id, int(float(webhook_data["object"]["amount"]["value"])), 'yookassa')
        try:
            await client.unblock()
        except:
            await bot.send_message(376131047, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –º–µ—Ç–æ–¥–∞ client.unblock() –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {client.user_telegram_id}:\n\n{traceback.format_exc()}')
        try:
            await bot.send_animation(client.user_telegram_id, animation=gifs_id[random.randint(0, len(gifs_id) - 1)])
            await bot.send_message(client.user_telegram_id, ('üòå –°–ø–∞—Å–∏–±–æ, –æ–ø–ª–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∞.\n\n'
                                                            f'–î–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–π –æ–ø–ª–∞—Ç—ã: –¥–æ {datetime.datetime.strftime(datetime.datetime.strptime(new_shutdown_date, "%Y-%m-%d %H:%M:%S") + datetime.timedelta(hours=int(client.timezone)), "%H:%M %d.%m.%Y")} (UTC+{client.timezone})\n\n'))
        except:
            await bot.send_message(376131047, f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {client.user_telegram_id}:\n\n{traceback.format_exc()}')
        inviter_id = await db_requests.get_inviter_id(client.user_telegram_id)
        if inviter_id:
            inviter_object = Client(inviter_id)
            if inviter_object.blocked:
                await inviter_object.unblock()
            if client.payment_recieved:
                await db_requests.add_days(inviter_id, days=3, bonus=True)
                if inviter_object.notifications:
                    try:
                        await bot.send_message(inviter_id, f'–í–∞—à –¥—Ä—É–≥ {client.user_name} –æ–ø–ª–∞—Ç–∏–ª –¥–æ—Å—Ç—É–ø, –∑–∞ —ç—Ç–æ –≤–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 3 –±–æ–Ω—É—Å–Ω—ã—Ö –¥–Ω—è! üòé')
                    except:
                        pass
            else:
                await db_requests.add_days(inviter_id, bonus=True)
                if inviter_object.notifications:
                    try:
                        await bot.send_message(inviter_id, f'–í–∞—à –¥—Ä—É–≥ {client.user_name} –≤–ø–µ—Ä–≤—ã–µ –æ–ø–ª–∞—Ç–∏–ª –¥–æ—Å—Ç—É–ø, –∑–∞ —ç—Ç–æ –≤–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω –±–æ–Ω—É—Å–Ω—ã–π –º–µ—Å—è—Ü! üòé')
                    except:
                        pass
        await bot.send_message(376131047, f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id {client.user_telegram_id} ({client.user_name}) –æ–ø–ª–∞—Ç–∏–ª {int(float(webhook_data["object"]["amount"]["value"]))} —Ä—É–±. —á–µ—Ä–µ–∑ YOOKASSA ({webhook_data["object"]["payment_method"]["type"]})')    
        return

    return {"message": "Webhook received successfully"}
